<rml>
	<head>
		<link type="text/rcss" href="/ui/shared/basics.rcss" />
		<link type="text/rcss" href="/ui/shared/circlemenu.rcss" />
		<link type="text/rcss" href="/ui/shared/infobox.rcss" />
		<style>
			body {
				width: 100%;
				height: 100%;
				background: #00000066;
				text-align: center;
			}
			
			.circlemenu icon {
				display: inline-block;
				position: absolute;
				bottom: 0.3em;
				right: 0.75em;
				font-size: 1.7em;
			}
			
			.circlemenu button {
				position: relative;
				image-color: rgb(100, 100, 100);
			}
			
			.circlemenu button:focus,
			.circlemenu button:hover {
				image-color: rgb(255, 255, 255);
			}

			.circlemenu button img {
				color: rgb(230, 230, 230);
			}

			#beaconMenuBackdrop {
				display: block;
				width: 32em;
				height: 32em;
				text-align: center;
				position: absolute;
				left: 0;
				top: 0;
				margin-top: -16em;
				margin-left: -16em;
				border-radius: 16em;
				background-color: rgba(0, 0, 0, 30);
			}
		</style>
		<script src="lua/util.lua" />
		<script>
			function custom(document, event)
				local myHandler = dofile("mymodule.lua")
				myHandler(document, event)
			end
			function backdropClick(document, event)
				local r_y = -event.parameters.mouse_y/document.client_height + 0.5
				local r_x = event.parameters.mouse_x/document.client_width - 0.5
				local tau = (math.atan2(r_y, r_x) + 2*math.pi)%(2*math.pi)

				local index = indexSelect(tau, 5)
				local menu = document:GetElementById("beaconMenu")
				-- Cancel button is first
				menu.child_nodes[index+1].first_child:Click()
			end
			function backdropCapture(document, event)
				local r_y = -event.parameters.mouse_y/document.client_height + 0.5
				local r_x = event.parameters.mouse_x/document.client_width - 0.5
				local tau = (math.atan2(r_y, r_x) + 2*math.pi)%(2*math.pi)

				local index = indexSelect(tau, 5)
				local menu = document:GetElementById("beaconMenu")
				-- Cancel button is first
				menu.child_nodes[index+1].first_child:Focus()
			end
			function BeaconClick(idx, event)
				if idx > #beacons then return end
				Cmd.exec("beacon " .. beacons[idx][2])
				Events.pushevent("hide ingame_beaconmenu", event)
			end
			function BeaconHover(document, idx)
				ClearBeaconInfo(document)
				local beacon = beacons[idx]
				document:GetElementById("beaconName"):AppendChild(document:CreateTextNode(beacon[2]))
				document:GetElementById("beaconDesc"):AppendChild(document:CreateTextNode(beacon[3]))
			end
			function ClearBeaconInfo(document)
				document:GetElementById("beaconName").inner_rml = ""
				document:GetElementById("beaconDesc").inner_rml = ""
			end
			function BuildBeaconMenu(document)
				ClearBeaconInfo(document)
				if beacons == nil then
					CDataSource.Build("beaconList", "default")
					beacons = CDataSource.Read("beaconList", "default", "icon,name,desc")
				end
				local circlemenu = document:GetElementById("beaconMenu")
				circlemenu.inner_rml = CirclemenuSkeleton(#beacons)
				for i=1,#beacons do
					circlemenu.child_nodes[i+1].inner_rml = string.format(
						'<button onclick="BeaconClick(%d, event)" onmouseover="BeaconHover(document,%d)"><img src="/%s"/></button>',
						i, i, beacons[i][1])
				end
				document:GetElementById("keyboardHints").inner_rml = CirclemenuKeyboardHints(#beacons)
			end
		</script>
	</head>
	<body id="ingame_beaconmenu" class="circlemenu" onkeydown="CirclemenuHandleKey(event, document, BeaconClick)" onshow="BuildBeaconMenu(document)" onclick="document:Hide()">
		<tabset class="circlemenu">
			<tab><translate>Beacons</translate></tab>
			<panel>
				<div class="circlemenu-circle" id="keyboardHints"/>
				<div class="circlemenu-circle" id="beaconMenu"/>
				<div id="beaconMenuBackdrop" onmousemove="backdropCapture(document, event)" onmouseup="backdropClick(document, event)"/>
				<div style="position: absolute; left: 0; width: 40%;">
					<div class="infobox">
						<h2 id="beaconName"></h2>
						<p class="text" style="text-align: left;" id="beaconDesc"></p>
					</div>
				</div>
			</panel>
		</tabset>
	</body>
</rml>
